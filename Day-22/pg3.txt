import java.util.Scanner;

// Abstract class representing a Bank
abstract class Bank {
    protected double balance = 5000; // initial balance

    abstract void deposit(double amount);
    abstract void withdraw(double amount);
    abstract void checkBalance();
}

// SBI Bank implementation
class SBI extends Bank {

    @Override
    void deposit(double amount) {
        balance += amount;
        System.out.println("Deposited: " + amount);
        checkBalance();
    }

    @Override
    void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            System.out.println("Withdrawn: " + amount);
        } else {
            System.out.println("Insufficient Balance");
        }
        checkBalance();
    }

    @Override
    void checkBalance() {
        System.out.println("Current Balance: " + balance);
    }
}

// HDFC Bank implementation
class HDFC extends Bank {

    @Override
    void deposit(double amount) {
        balance += amount;
        System.out.println("Deposited: " + amount);
        checkBalance();
    }

    @Override
    void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            System.out.println("Withdrawn: " + amount);
        } else {
            System.out.println("Insufficient Balance");
        }
        checkBalance();
    }

    @Override
    void checkBalance() {
        System.out.println("Current Balance: " + balance);
    }
}

// Main class
public class BankApp {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Read Bank name
        String bankName = sc.nextLine();

        // Create bank object
        Bank bank;
        if (bankName.equalsIgnoreCase("SBI")) {
            bank = new SBI();
        } else {
            bank = new HDFC();
        }

        // Read operation and amount
        String operation = sc.nextLine();
        double amount = sc.nextDouble();

        // Perform operation
        switch (operation.toLowerCase()) {
            case "deposit":
                bank.deposit(amount);
                break;
            case "withdraw":
                bank.withdraw(amount);
                break;
            default:
                System.out.println("Invalid Operation");
        }

        sc.close();
    }
}
